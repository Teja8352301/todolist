{"version":3,"sources":["DataList/DataList.module.css","logo.svg","DataList/DataList.js","TypeBar/Typebar.js","ListItems/ListItem/ListItem.js","ListItems/ListItems.js","App.js","reportWebVitals.js","index.js","ListItems/ListItem/ListItem.module.css","TypeBar/Typebar.module.css"],"names":["module","exports","DataList","state","data","changeDataList","event","setState","target","value","props","changeDataType","dataListRef","React","createRef","list","name","className","classes","this","onChange","id","Component","connect","dispatch","type","Typebar","addItem","inputRef","current","trim","length","date","Date","hours","getHours","timing","getMinutes","getSeconds","addItems","alert","keyboardEnter","ref","Input","placeholder","onKeyPress","key","Icon","onClick","style","fontSize","color","padding","backgroundColor","timings","ListItem","showReference","console","log","name1","completed","textDecorationColor","Fragment","OuterListItem","clicked","deleted","ListItems","index","deleteElement","cancelElement","inputTyping","inputType","newInput","items","content","map","val","cancelIndex","showIndex","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initializeReducer","store","createStore","action","newState","push","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ef12afd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DataList\":\"DataList_DataList__10Cmr\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\r\nimport classes from \"./DataList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nclass DataList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.dataListRef = React.createRef();\r\n  }\r\n  state = {\r\n    data: \"All\",\r\n  };\r\n  changeDataList = event => {\r\n    this.setState({ data: event.target.value });\r\n\r\n    if (\r\n      event.target.value === \"All\" ||\r\n      event.target.value === \"Complete\" ||\r\n      event.target.value === \"Incomplete\"\r\n    ) {\r\n      this.props.changeDataType(event.target.value);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          list=\"datalist\"\r\n          name=\"browser\"\r\n          className={classes.DataList}\r\n          value={this.state.data}\r\n          onChange={this.changeDataList}\r\n        />\r\n\r\n        <datalist id=\"datalist\">\r\n          <option value=\"All\" />\r\n          <option value=\"Complete\" />\r\n          <option value=\"Incomplete\" />\r\n        </datalist>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nlet propsToDispatch = dispatch => {\r\n  return {\r\n    changeDataType: value => dispatch({ type: \"CHANGE_DATA\", value: value }),\r\n  };\r\n};\r\nexport default connect(null, propsToDispatch)(DataList);\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./Typebar.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport DataList from \"../DataList/DataList\";\r\nclass Typebar extends Component {\r\n  constructor() {\r\n    super();\r\n    this.inputRef = React.createRef();\r\n  }\r\n  addItem = event => {\r\n    this.inputRef.current.value = this.inputRef.current.value.trim();\r\n    if (this.inputRef.current.value.length) {\r\n      let date = new Date();\r\n      let hours = date.getHours();\r\n      if (date.getHours() > 12) {\r\n        hours = hours - 12;\r\n      }\r\n      let timing = hours + \":\" + date.getMinutes() + \":\" + date.getSeconds();\r\n      if (date.getHours() > 12) {\r\n        timing = timing + \"PM\";\r\n      } else {\r\n        timing = timing + \"AM\";\r\n      }\r\n      this.props.addItems(this.inputRef.current.value, timing);\r\n    } else {\r\n      alert(\"InValid Data\");\r\n    }\r\n    this.inputRef.current.value = \"\";\r\n  };\r\n  keyboardEnter = event => {\r\n    let date = new Date();\r\n    let hours = date.getHours();\r\n\r\n    if (date.getHours() > 12) {\r\n      hours = hours - 12;\r\n    }\r\n    let timing = hours + \":\" + date.getMinutes() + \":\" + date.getSeconds();\r\n    if (date.getHours() > 12) {\r\n      timing = timing + \"PM\";\r\n    } else {\r\n      timing = timing + \"AM\";\r\n    }\r\n    this.inputRef.current.value = this.inputRef.current.value.trim();\r\n    if (this.inputRef.current.value.length) {\r\n      this.props.addItems(this.inputRef.current.value, timing);\r\n    } else {\r\n      alert(\"InValid Data\");\r\n    }\r\n    this.inputRef.current.value = \"\";\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={classes.Typebar}>\r\n          <input\r\n            ref={this.inputRef}\r\n            className={classes.Input}\r\n            type=\"text\"\r\n            placeholder=\"Enter the Content\"\r\n            onKeyPress={event => {\r\n              if (event.key == \"Enter\") {\r\n                this.keyboardEnter(event);\r\n              }\r\n            }}\r\n          />\r\n          <div className={classes.Icon} onClick={event => this.addItem(event)}>\r\n            <i\r\n              className=\"fa fa-plus\"\r\n              style={{\r\n                fontSize: \"30px\",\r\n                color: \"white\",\r\n                padding: \"10px\",\r\n                backgroundColor: \"rgba(228, 140, 58, 0.671)\",\r\n              }}\r\n            ></i>\r\n          </div>\r\n        </div>\r\n        <DataList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nlet propsToDispatch = dispatch => {\r\n  return {\r\n    addItems: (value, timings) =>\r\n      dispatch({ type: \"ADD_ITEM\", value: value, timing: timings }),\r\n  };\r\n};\r\nexport default connect(null, propsToDispatch)(Typebar);\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./ListItem.module.css\";\r\nclass ListItem extends Component {\r\n  showReference = ref => {\r\n    console.log(ref);\r\n  };\r\n  name1 = null;\r\n  render() {\r\n    let inlineStyle = {\r\n      textDecoration: \"line-through black\",\r\n      textDecorationStyle: \"solid\",\r\n    };\r\n    if (this.props.completed) {\r\n      this.name1 = (\r\n        <del style={{ textDecorationColor: \"black\" }}>\r\n          {this.props.name}&nbsp;&nbsp;&nbsp;&nbsp;{this.props.timing}\r\n        </del>\r\n      );\r\n    } else {\r\n      this.name1 = (\r\n        <React.Fragment>\r\n          {this.props.name}&nbsp;&nbsp;&nbsp;&nbsp;{this.props.timing}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    return (\r\n      <div className={classes.OuterListItem}>\r\n        <div className={classes.ListItem}>{this.name1};</div>\r\n        <div className={classes.Icon}>\r\n          <i\r\n            onClick={this.props.clicked}\r\n            className=\"fa fa-check-circle\"\r\n            style={{\r\n              fontSize: \"30px\",\r\n              color: \"white\",\r\n              padding: \"10px\",\r\n              backgroundColor: \"rgb(207, 115, 29)\",\r\n            }}\r\n          ></i>\r\n        </div>\r\n        <div className={classes.Icon}>\r\n          <i\r\n            onClick={this.props.deleted}\r\n            className=\"fa fa-close\"\r\n            style={{\r\n              fontSize: \"30px\",\r\n              color: \"white\",\r\n              padding: \"10px\",\r\n              backgroundColor: \"rgb(207, 115, 29)\",\r\n            }}\r\n          ></i>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ListItem;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ListItem from \"./ListItem/ListItem\";\r\nclass ListItems extends Component {\r\n  showIndex(event, index) {\r\n    this.props.deleteElement(index);\r\n  }\r\n  cancelIndex(event, index) {\r\n    this.props.cancelElement(index);\r\n  }\r\n  render() {\r\n    let inputTyping = this.props.data.inputType;\r\n    let newInput = null;\r\n    if (inputTyping === \"All\") {\r\n      newInput = null;\r\n    } else if (inputTyping === \"Complete\") {\r\n      newInput = true;\r\n    } else {\r\n      newInput = false;\r\n    }\r\n    let items = this.props.data.content.map((val, index) => {\r\n      if (newInput != null) {\r\n        if (val.completed === newInput) {\r\n          return (\r\n            <ListItem\r\n              completed={val.completed}\r\n              timing={val.timing}\r\n              name={val.name}\r\n              key={index}\r\n              index={index}\r\n              clicked={event => this.cancelIndex(event, index)}\r\n              deleted={event => this.showIndex(event, index)}\r\n            />\r\n          );\r\n        }\r\n      } else {\r\n        return (\r\n          <ListItem\r\n            completed={val.completed}\r\n            timing={val.timing}\r\n            name={val.name}\r\n            key={index}\r\n            index={index}\r\n            clicked={event => this.cancelIndex(event, index)}\r\n            deleted={event => this.showIndex(event, index)}\r\n          />\r\n        );\r\n      }\r\n    });\r\n    return <div>{items}</div>;\r\n  }\r\n}\r\n\r\nlet storeToProps = state => {\r\n  return {\r\n    data: state,\r\n  };\r\n};\r\n\r\nlet propsToDispatch = dispatch => {\r\n  return {\r\n    deleteElement: index => dispatch({ type: \"DELETE_ELEMENT\", index: index }),\r\n    cancelElement: index => dispatch({ type: \"CANCEL_ELEMENT\", index: index }),\r\n  };\r\n};\r\nexport default connect(storeToProps, propsToDispatch)(ListItems);\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport Typebar from \"./TypeBar/Typebar\";\nimport ListItems from \"./ListItems/ListItems\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>TODO LIST</h1>\n        <Typebar />\n        <ListItems />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { act } from \"@testing-library/react\";\n\n///////////////INITIALIZE REDUCER////////////////////\nlet initializeReducer = {\n  content: [],\n  inputType: \"All\",\n};\n\n////////////////SET REDUCER/////////////////////////\nlet reducer = (state = initializeReducer, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    let newState = { ...state };\n    newState.content.push({\n      name: action.value,\n      completed: false,\n      timing: action.timing,\n    });\n    state = { ...newState };\n  }\n  if (action.type === \"DELETE_ELEMENT\") {\n    let newState = { ...state };\n    newState.content.splice(action.index, 1);\n    state = { ...newState };\n  }\n  if (action.type === \"CANCEL_ELEMENT\") {\n    let newState = { ...state };\n    newState.content[action.index].completed = !newState.content[action.index]\n      .completed;\n    state = { ...newState };\n  }\n  if (action.type === \"CHANGE_DATA\") {\n    let newState = { ...state };\n    newState.inputType = action.value;\n    state = { ...newState };\n  }\n  return state;\n};\n\n//////////////////CREATE STORE/////////////////////\n\nlet store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OuterListItem\":\"ListItem_OuterListItem__h8ZAG\",\"ListItem\":\"ListItem_ListItem__2hpE8\",\"Icon\":\"ListItem_Icon__swJ-o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Typebar\":\"Typebar_Typebar__nDeNf\",\"Input\":\"Typebar_Input__1X0IK\",\"Icon\":\"Typebar_Icon__14ZO2\"};"],"sourceRoot":""}